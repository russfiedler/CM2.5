#!/bin/csh -f
#PBS -d Put_the_path_to_the_root_directory_here/ascii_output
#PBS -o Put_the_path_to_the_root_directory_here/ascii_output/
#PBS -N FLOR
#PBS -l walltime=1800
#PBS -W umask=026
#PBS -S /bin/tcsh
#PBS -r y
#PBS -q batch
#PBS -l partition=c1:c2
#PBS -m a
#PBS -j oe
#PBS -E
#PBS -l size=2240
#PBS -l qos=norm
#PBS -A gfdl_f

set echo 
#--------------------------------------------------------------------------------------------------------
set Root = $cwd/..                                       # The root directory; where the release package was extracted.
set platform  = intel                                    # A unique identifier for your platform
set npes      = 2224                                     # Number of processors
set num_executions = 1                                   # Number of times the model is run. Each run restarts from previous run.
set time_stamp    = $Root/bin/time_stamp.csh             # Path to timestamp.csh
set mppnccombine  = $Root/bin/mppnccombine.$platform     # Path to executable mppnccombine
set landnccombine = $Root/bin/landnccombine.$platform    # Path to executable landnccombine
set fregrid       = $Root/bin/fregrid_parallel.$platform # Path to executable and grid data for fregrid
set model_executable = $Root/exp/exec.$platform/CM2.5.x  # Path to model executable
set workdir = /lustre/f1/$USER/work/FLOR                 # Where model is run and model output is put 
#--------------------------------------------------------------------------------------------------------
source /opt/modules/3.2.6.6/init/csh
module use -a /ncrc/home2/fms/local/modulefiles
module unload PrgEnv-pgi PrgEnv-pathscale PrgEnv-intel PrgEnv-gnu PrgEnv-cray
module unload fre
module unload fre-system
module load PrgEnv-intel/4.0.46
module swap intel intel/12.1.3.293
module load netcdf
module load nco/4.3.1
module list
setenv MAIN_PROGRAM coupler_main.o

set namelist   = $Root/exp/FLOR_namelists    # path to namelist file (contains all namelists)
set diagtable  = $Root/exp/FLOR_diag_table   # path to diagnositics table (specifies fields and files for diagnostic output)
set fieldtable = $Root/exp/FLOR_field_table  # path to field table (specifies tracers)
set datatable  = $Root/exp/FLOR_data_table   # path to data table (specifies data files used by data_override)
#--------------------------------------------------------------------------------------------------------
# The gaea locations of the input data sets are listed below
set gridSpec  = /lustre/f1/pdata/gfdl_G/blue_flower/bf_mosaics_v2.tar
set initCond  = /lustre/f1/pdata/gfdl_G/blue_flower/bf_initcond_v4.tar
set FLOR_input = /lustre/f1/unswept/Peter.Phillipps/input_for_FLOR/input_for_FLOR.tar
#--------------------------------------------------------------------------------------------------------
# The input data should also be put here: ftp://ftp.gfdl.noaa.gov/pub/projects/CM2.5_and_FLOR/FLOR_input_data.tar.gz
#--------------------------------------------------------------------------------------------------------
# setup directory structure
if ( -d $workdir ) then
  /bin/rm -rf $workdir/*
else
  mkdir $workdir
endif
cd $workdir
mkdir INPUT RESTART
#--------------------------------------------------------------------------------------------------------
# get input data and executable
cp $namelist   input.nml
cp $diagtable  diag_table
cp $fieldtable field_table
cp $datatable  data_table
cp $model_executable .
cd $workdir/INPUT
tar xvf $gridSpec
tar xvf $initCond
tar xvf $FLOR_input
cd $workdir

set irun = 1
while ( $irun <= $num_executions )
#--------------------------------------------------------------------------------------------------------
# run the model with aprun
aprun -n $npes ./$model_executable:t
if ($status != 0) then
  echo "Error in execution of $cwd/$model_executable:t"
  exit 1
endif
#--------------------------------------------------------------------------------------------------------
set date_name = `$time_stamp -bf digital`
foreach outfile (logfile.*.out diag_integral.out time_stamp.out)
  mv $outfile $date_name.$outfile
end
#--------------------------------------------------------------------------------------------------------
# combine distributed diagnostic files, remove the uncombined files, and add the time stamp to the file names
foreach ncfile (`/bin/ls *.nc.0000`)
  $mppnccombine -64 -h 16384 -m $ncfile:r
  if ($status == 0) then
    rm -f $ncfile:r.[0-9][0-9][0-9][0-9]
    mv $ncfile:r $date_name.$ncfile:r
  else
    echo "Error in execution of $mppnccombine while working on $ncfile:r"
    exit 1
  endif
end
#--------------------------------------------------------------------------------------------------------
# Add the time stamp to remaining diagnostic files (those not distributed)
mv atmos_scalar.nc $date_name.atmos_scalar.nc
mv ocean_scalar.nc $date_name.ocean_scalar.nc
#--------------------------------------------------------------------------------------------------------
cd $workdir/RESTART
#--------------------------------------------------------------------------------------------------------
# combine land restart files and remove the uncombined files
foreach landname (cana glac lake land snow soil vegn1 vegn2)
  foreach tilenum (1 2 3 4 5 6)
    set distfiles=($landname.res.tile$tilenum.nc.[0-9][0-9][0-9][0-9])
    $landnccombine $distfiles $landname.res.tile$tilenum.nc
    if ($status == 0) then
      rm -f $distfiles
    else
      echo "Error in execution of $landnccombine while working on $landname.res.tile$tilenum.nc"
      exit 1
    endif
  end
end
#--------------------------------------------------------------------------------------------------------
# combine remaining restart files and remove the uncombined files
foreach ncfile (`/bin/ls *.nc.0000`)
  $mppnccombine -64 -h 16384 -m $ncfile:r
  if ($status == 0) then
    rm -f $ncfile:r.[0-9][0-9][0-9][0-9]
  else
    echo "Error in execution of $mppnccombine while working on $ncfile:r"
    exit 1
  endif
end
#--------------------------------------------------------------------------------------------------------
# Interpolate diagnostic data to lat-lon grid
cd $workdir
set diagFiles = (`/bin/ls -1 $date_name.*.tile1.nc | grep -v grid_spec | grep -v horizontal_grid.tile`)
set latlonfiles = ()
cp $Root/fregrid/input/C180_mosaic.nc .
cp $Root/fregrid/input/C180_grid.tile?.nc .
foreach File ($diagFiles)
  set variables = (`ncdump -h $File | grep 'grid_yt, grid_xt' | awk '{print $2}' | cut -d\( -f1`)
  set variables = `echo $variables |sed 's/ /,/g'`
  set basename = $File:r:r
  aprun -n 32 $fregrid --input_mosaic C180_mosaic.nc --input_file $basename --interp_method conserve_order1 \
                                 --remap_file fregrid_remap_file --nlon 576 --nlat 360 --scalar_field $variables
  if ($status != 0) then
    echo "Error in execution of fregrid while working on $basename"
    exit 1
  endif
  set latlonfiles = ($latlonfiles $basename.nc)
end
unset echo
echo 'Fields interpolated to lat-lon grid exist in these files:'
foreach File ($latlonfiles)
  ls -l $cwd/$File
end
set echo
#--------------------------------------------------------------------------------------------------------
# Prepare to run the model again
/bin/rm INPUT/*.res   INPUT/*.res.nc   INPUT/*.res.nc.[0-9][0-9][0-9][0-9]   INPUT/*.res.tile?.nc   INPUT/*.res.tile?.nc.[0-9][0-9][0-9][0-9]
mv    RESTART/*.res RESTART/*.res.nc RESTART/*.res.nc.[0-9][0-9][0-9][0-9] RESTART/*.res.tile?.nc RESTART/*.res.tile?.nc.[0-9][0-9][0-9][0-9] INPUT
#--------------------------------------------------------------------------------------------------------
@ irun ++
end
echo 'run script successfully completed'
exit 0
